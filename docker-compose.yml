version: '3'

services:
  db:
    image: postgis/postgis:14-3.2
    environment:
      POSTGRES_DB: myproject
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5431:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  analytics_db:
    build:
      context: .
      dockerfile: Dockerfile.analytics
    environment:
      POSTGRES_DB: taxi_analytics
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST: localhost 
    ports:
      - "5430:5432"
    volumes:
      - postgres_analytics_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  web:
    build: .
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/code
      - static_volume:/code/staticfiles
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DEBUG=1
      - DATABASE_URL=postgis://postgres:postgres@db:5432/myproject
      - DEFAULT_USER_ACTIVITY=0

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./provisioning:/etc/grafana/provisioning
      - ./analytics_dash.json:/etc/grafana/provisioning/dashboards/analytics_dash.json
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    depends_on:
      - analytics_db

volumes:
  postgres_data:
  static_volume:
  postgres_analytics_data:
  grafana-storage: